{
  "name": "mongoleaderboard",
  "version": "0.0.13",
  "author": {
    "name": "Tom Kelly"
  },
  "dependencies": {
    "mongojs": "0.7.x",
    "assert": "0.4.x"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tomkelly000/mongoleaderboard.git"
  },
  "engines": {
    "node": "0.10.x",
    "npm": "1.2.x"
  },
  "readme": "# mongoleaderboard\n\nA node.js module for implementing a simple leaderboard with mongodb\n\n## Usage\n\n``` js\nvar Leaderboard = require('mongoleaderboard');\nvar mongoUri = 'mongodb://localhost/mydb';\nvar leaderboard = new Leaderboard(mongoUri);\n```\n\nYou can also specify options\n``` js\nvar options = {};\n// specify a leaderboard at collection named highscores\n// with page sizes of 5, 2 pages, that refreshes daily at 5:00\noptions.collection = 'highscores'; // defaults to leaderboard\noptions.page_size = 5; // defaults to 20\noptions.num_pages = 2; // defaults to 1\noptions.start_time = { // time of day to refresh\n        'milliseconds':0,\n        'seconds':0,\n        'minutes':0,\n        'hours':5\n    }; // defaults to midnight\noptions.duration = 1000 * 60 * 60 * 24; // time in milliseconds\n\t\t   \t                // defaults to infinity\nvar leaderboard = new Leaderboard(mongoUri, options);\n```\n\n## API\n``` js\n// executes the callback passing the argument true (1) \n// if the score is a high score, otherwise pass  false (0)\nleaderboard.check(score, callback);\n\n// overwrites the lowest score on the leaderboard if the given score \n// is larger. if the force parameter is supplied, it will overwrite\n// no matter what. member is an object with the other info a highscore needs\n// e.g. member = {'initials':'TJK'}\n// executes the callback with two arguments, err and the saved member object\nleaderboard.postHighScore(highscore, member, callback, force);\n// also aliased as\nleaderboard.post(highscore, member, callback, force);\n\n// executes the callback on the two arguments err and scores,\n// where scores is an array of objects\nleaderboard.getHighScores(callback);\n// also aliased as\nleaderboard.get(callback);\n```\n\n\n\n",
  "readmeFilename": "README.md",
  "description": "A node.js module for implementing a simple leaderboard with mongodb",
  "bugs": {
    "url": "https://github.com/tomkelly000/mongoleaderboard/issues"
  },
  "_id": "mongoleaderboard@0.0.13",
  "_from": "mongoleaderboard@0.0.x"
}
